import { Component, OnInit, Inject } from '@angular/core';
import { ActivatedRoute,Router} from "@angular/router";
import { FormArray, FormBuilder, FormControl, Validators } from '@angular/forms';
import { MatDialogRef, MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';

import { T4Service } from '../t-4.service';
import { IT4 } from '../it-4';
import { BaseNewComponent, FieldType, PickerDialogService } from 'src/app/common/shared';
import { ErrorService } from 'src/app/core/services/error.service';


@Component({
  selector: 'app-t-4-new',
  templateUrl: './t-4-new.component.html',
  styleUrls: ['./t-4-new.component.scss']
})
export class T4NewComponent extends BaseNewComponent<IT4> implements OnInit {
  
    title:string = "New T4";
	constructor(
		public formBuilder: FormBuilder,
		public router: Router,
		public route: ActivatedRoute,
		public dialog: MatDialog,
		public dialogRef: MatDialogRef<T4NewComponent>,
		@Inject(MAT_DIALOG_DATA) public data: any,
		public pickerDialogService: PickerDialogService,
		public t4Service: T4Service,
		public errorService: ErrorService,
	) {
		super(formBuilder, router, route, dialog, dialogRef, data, pickerDialogService, t4Service, errorService);
	}
 
		ngOnInit() {
		this.entityName = 'T4';
		this.setAssociations();
		super.ngOnInit();
    	this.setForm();
		this.checkPassedData();
    }
 		
	setForm(){
 		this.itemForm = this.formBuilder.group({
      	  score: new FormArray([]),
    });
    
    this.fields = [
              {
      		  name: 'score',
      		  label: 'score',
      		  isRequired: false,
      		  isAutoGenerated: false,
                   type : FieldType.Array,
                   subtype : FieldType.Number,
      	    },
		];
	}
	 
	setAssociations(){
  	
		this.associations = [
		];
		this.parentAssociations = this.associations.filter(association => {
			return (!association.isParent);
		});

	}
	
	onSubmit() {
		let t4 = this.itemForm.getRawValue();
		super.onSubmit(t4);
		
	}
    
}
